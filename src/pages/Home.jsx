import axios from 'axios';
import qs from 'qs';
import React, { useEffect, useRef, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useNavigate, useLocation } from 'react-router-dom';
import Categories from '../components/Categories';
import PaginationComponent from '../components/Pagination/Pagination';
import PizzaBlock from '../components/PizzaBlock/PizzaBlock';
import Skeleton from '../components/PizzaBlock/Skeleton';
import Sort, { sortList } from '../components/Sort';
import { setFilters, setTotalPages } from '../redux/slices/filterSlice';

export default function Home() {
	const navigate = useNavigate();
	const location = useLocation(); // üåç –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π URL
	const dispatch = useDispatch();

	// üéõ –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ Redux
	const { limit, searchValue, sort, categoryId, currentPage, totalPages } = useSelector(state => state.filter);
	const sortType = sort.sortProperty;

	const [pizzas, setPizzas] = useState([]); // üçï –°–ø–∏—Å–æ–∫ –ø–∏—Ü—Ü
	const [isLoading, setIsLoading] = useState(true); // ‚è≥ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏

	const isSearch = useRef(false); // üîç –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL
	const isMounted = useRef(false); // üöÄ –§–ª–∞–≥ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞

	// üì° –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
	const fetchData = async () => {
		const order = sortType.includes('-') ? 'asc' : 'desc'; // üîÑ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
		const sortBy = sortType.replace('-', ''); // üî§ –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
		const category = categoryId ? `&category=${categoryId}` : ''; // üçï –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
		const search = searchValue ? `&search=${searchValue}` : ''; // üîé –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–∏—Å–∫—É
		const page = `&page=${currentPage}&limit=${limit}`; // üìú –ü–∞–≥–∏–Ω–∞—Ü–∏—è

		setIsLoading(true); // ‚è≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏

		try {
			// üì° –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∏—Ü—Ü
			const { data } = await axios.get(
				`https://67366061aafa2ef222305c73.mockapi.io/pizza-block?${category}&sortBy=${sortBy}&order=${order}${search}${page}`
			);
			setPizzas(data);

			// üî¢ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
			const { data: totalData } = await axios.get(
				`https://67366061aafa2ef222305c73.mockapi.io/pizza-block?${category}${search}`
			);
			dispatch(setTotalPages(Math.ceil(totalData.length / limit)));
		} catch (error) {
			console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
		} finally {
			setIsLoading(false); // ‚úÖ –í—ã–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
		}
	};

	// üîÑ –ß–∏—Ç–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
	useEffect(() => {
		if (window.location.search) {
			const params = qs.parse(location.search.substring(1)); // üó∫ –†–∞–∑–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
			const sort = sortList.find(obj => obj.sortProperty === obj.sortProperty);

			dispatch(
				setFilters({
					...params,
					sort,
				})
			);
			isSearch.current = true; // ‚úÖ –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
		}
	}, []);

	// üì° –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
	useEffect(() => {
		window.scrollTo(0, 0); // ‚¨ÜÔ∏è –°–∫—Ä–æ–ª–ª–∏–º –Ω–∞–≤–µ—Ä—Ö
		if (!isSearch.current) {
			fetchData(); // üì° –í—ã–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
		}
		isSearch.current = false;
	}, [categoryId, sortType, searchValue, currentPage, limit]);

	// üîó –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ URL –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
	useEffect(() => {
		if (isMounted.current) {
			const queryString = qs.stringify({
				sortProperty: sort.sortProperty,
				categoryId,
				currentPage,
			});
			navigate(`?${queryString}`); // üîó –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞
		}
		isMounted.current = true;
	}, [categoryId, sort.sortProperty, currentPage, navigate]);

	return (
		<div className="container">
			<div className="content__top">
				<Categories />
				<Sort />
			</div>
			<h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
			<div className="content__items">
				{isLoading ? (
					[...new Array(limit)].map((_, index) => <Skeleton key={index} />) // ‚è≥ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–∫–µ–ª–µ—Ç–æ–Ω—ã –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
				) : pizzas.length === 0 ? (
					<p>üö´ –ü–∏—Ü—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
				) : (
					pizzas.map(pizza => <PizzaBlock key={pizza.id} {...pizza} />) // üçï –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∏—Ü—Ü
				)}
			</div>

			{totalPages > 1 && <PaginationComponent />} {/* üìÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π */}
		</div>
	);
}
